<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Android网络技术的使用</title>
    <link href="/2023/09/12/Android%E7%BD%91%E7%BB%9C%E6%8A%80%E6%9C%AF%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/09/12/Android%E7%BD%91%E7%BB%9C%E6%8A%80%E6%9C%AF%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="使用HTTP协议访问网络"><a href="#使用HTTP协议访问网络" class="headerlink" title="使用HTTP协议访问网络"></a>使用HTTP协议访问网络</h2><p>HTTP的工作原理：客户端向网络端发送一条HTTP协议请求，服务器收到请求后返回一些数据给客户端，然后客户端对这些数据进行解析和处理就可以了。</p><h3 id="使用HttpURLConnection"><a href="#使用HttpURLConnection" class="headerlink" title="使用HttpURLConnection"></a>使用HttpURLConnection</h3><p>使用步骤：</p><p>1.先获取HttpURLConnection，要获取这个实例，一般只需new出一个URL对象，并传入网络地址，然后调用openConnection()方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">URL url=<span class="hljs-keyword">new</span> <span class="hljs-title class_">URL</span>(<span class="hljs-string">&quot;http://www.baidu.com&quot;</span>);<br>HttpURLConnection connection=(HttpURLConnection) url.openConnection();<br></code></pre></td></tr></table></figure><p>2.设置HTTP的请求方式：GET（从服务器获取数据）、POST（提交数据给服务器）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//获取数据</span><br>connection.setRequestMethod(<span class="hljs-string">&quot;GET&quot;</span>);<br></code></pre></td></tr></table></figure><p>若要进行提交数据到数据库操作：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//将用户名和密码提交数据库</span><br>connection.setRequestMethod(<span class="hljs-string">&quot;POST&quot;</span>);<br>DataOutputStream out=<span class="hljs-keyword">new</span> <span class="hljs-title class_">DataOutputStream</span>(connection.getOutputStream());<br>out.writeBytes(<span class="hljs-string">&quot;username=admin&amp;&amp;password=123456&quot;</span>);<br></code></pre></td></tr></table></figure><p>3.调用getInputStream()方法获取服务器返回的数据流，对输入流进行读取(第一行代码317页)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">InputStream in=connection.getInputStream();<br></code></pre></td></tr></table></figure><p>4.最后调用disconnection()将HTTP连接关闭</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">connection.disconnect();<br></code></pre></td></tr></table></figure><p>注意：在AndroidManifest.xml声明网络权限</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">uses-permission</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.permission.INTERNET&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure><h3 id="使用OkHttp"><a href="#使用OkHttp" class="headerlink" title="使用OkHttp"></a>使用OkHttp</h3><p>在build.gradle文件中添加：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">implementation &#x27;com.squareup.okhttp3:okhttp:4.9.0&#x27;<br></code></pre></td></tr></table></figure><p>使用步骤：</p><p>1.创建一个OkHttpClient实例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">OkHttpClient client=<span class="hljs-keyword">new</span> <span class="hljs-title class_">OkHttpClient</span>();<br></code></pre></td></tr></table></figure><p>2.创建Request对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java">Request request=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Request</span>.Builder()<br>    .url(<span class="hljs-string">&quot;目标网络地址&quot;</span>)<br>    .build();<br></code></pre></td></tr></table></figure><p>3.调用OkHttpClient的newCall()方法创建Call对象，并调用它的excute()方法发送请求并获取返回的数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">Response response=client.newCall(request).execute();<br></code></pre></td></tr></table></figure><p>4.上述的response就是数据库返回的数据了,接下来得到具体内容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">String responseData=response.body().string();<br></code></pre></td></tr></table></figure><p>若要发送一条POST请求</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java">RequestBody requestBody=<span class="hljs-keyword">new</span> <span class="hljs-title class_">FormBody</span>.Builder()<br>    .add(<span class="hljs-string">&quot;username&quot;</span>,<span class="hljs-string">&quot;admin&quot;</span>)<br>    .add(<span class="hljs-string">&quot;password&quot;</span>,<span class="hljs-string">&quot;123456&quot;</span>)<br>    .build();<br>Request request=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Request</span>.Builder()<br>    .url(<span class="hljs-string">&quot;目标网站&quot;</span>)<br>    .post(requestBody)<br>    .build();<br></code></pre></td></tr></table></figure><h2 id="解析JSON格式数据"><a href="#解析JSON格式数据" class="headerlink" title="解析JSON格式数据"></a>解析JSON格式数据</h2><p>在Apache&#x2F;htdocs目录中新建一个.json文件，在文件中以JSON格式编写内容</p><h3 id="使用JSONObject"><a href="#使用JSONObject" class="headerlink" title="使用JSONObject"></a>使用JSONObject</h3><p>将得到的responseData传入JSONArray对象中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">JSONArray jsonArray=<span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONArray</span>(responseData);<br></code></pre></td></tr></table></figure><p>遍历这个JSONArray对象，每次得到一个JSONObject对象，调用getSting()方法将数据取出</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;jsonArray.length();i++)&#123;<br>    JSONObject jsonObject=jsonArray.getJSONObject(i);<br>    <span class="hljs-comment">//获得服务器端id的数据</span><br>    string id=jsonObject.getString(<span class="hljs-string">&quot;id&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>###使用GSON</p><p>在build.gradle文件中添加：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">implementation &#x27;com.google.code.gson:gson:2.9.0&#x27;<br></code></pre></td></tr></table></figure><p>GSON可以将JSON格式的字符串自动映射成一个对象</p><p>例如我们有如下一个json文件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">[</span><br>  <span class="hljs-punctuation">&#123;</span> <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;5&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;version&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;5.5&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Clash of Clans&quot;</span> <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-punctuation">&#123;</span> <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;6&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;version&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;7.0&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Boom Beach&quot;</span> <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-punctuation">&#123;</span> <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;7&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;version&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.5&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Clash Royale&quot;</span> <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure><p>我们可以先新建一个App类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">App</span> &#123;<br>    <span class="hljs-keyword">private</span> String id;<br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-keyword">private</span> String version;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getId</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> id;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setId</span><span class="hljs-params">(String id)</span> &#123;<br>        <span class="hljs-built_in">this</span>.id = id;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getName</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> name;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setName</span><span class="hljs-params">(String name)</span> &#123;<br>        <span class="hljs-built_in">this</span>.name = name;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getVersion</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> version;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setVersion</span><span class="hljs-params">(String version)</span> &#123;<br>        <span class="hljs-built_in">this</span>.version = version;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>现要解析这个JSON数组</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">Gson gson=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Gson</span>();<br>List&lt;App&gt; appList=gson.fromJson(responseData,<span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeToken</span>&lt;List&lt;App&gt;&gt;()&#123;&#125;.getType());<br><span class="hljs-keyword">for</span>(App app:appList)&#123;<br>    <span class="hljs-comment">//调用getId()、getName()、getVersion()方法</span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Mysql数据库</title>
    <link href="/2023/08/12/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <url>/2023/08/12/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    
    <content type="html"><![CDATA[<h1 id="基础-SQL"><a href="#基础-SQL" class="headerlink" title="基础-SQL"></a>基础-SQL</h1><h2 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h2><h3 id="数据类型："><a href="#数据类型：" class="headerlink" title="数据类型："></a>数据类型：</h3><p>![](C:\Users\熊亦恺\Pictures\Screenshots\屏幕截图 2023-07-30 161924.png)</p><p>![](C:\Users\熊亦恺\Pictures\Screenshots\屏幕截图 2023-07-30 161938.png)</p><p>![](C:\Users\熊亦恺\Pictures\Screenshots\屏幕截图 2023-07-30 161956.png)</p><p>&#x3D;&#x3D;注释用–&#x3D;&#x3D;</p><h2 id="DDL数据库操作"><a href="#DDL数据库操作" class="headerlink" title="DDL数据库操作"></a>DDL数据库操作</h2><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><p>查询所有数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> databases;<br></code></pre></td></tr></table></figure><p>查询当前数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> database();<br></code></pre></td></tr></table></figure><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> database 数据库名;<br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> database if <span class="hljs-keyword">not</span> <span class="hljs-keyword">exists</span> 数据库名;<br></code></pre></td></tr></table></figure><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">drop</span> database 数据库名;<br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">drop</span> database if <span class="hljs-keyword">exists</span> 数据库名;<br></code></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>对某个数据库操作</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">use 数据库名;<br></code></pre></td></tr></table></figure><h2 id="DDL表操作"><a href="#DDL表操作" class="headerlink" title="DDL表操作"></a>DDL表操作</h2><h3 id="创建-1"><a href="#创建-1" class="headerlink" title="创建"></a>创建</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> 表名(<br>    data1 数据类型(可接comment <span class="hljs-string">&#x27;注释&#x27;</span>表示对data注释),<br>    data2 数据类型,<br>    data3 数据类型<br>) comment <span class="hljs-string">&#x27;注释&#x27;</span>;<br></code></pre></td></tr></table></figure><h3 id="查询-1"><a href="#查询-1" class="headerlink" title="查询"></a>查询</h3><p>1.查询当前库的所有表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> tables;<br></code></pre></td></tr></table></figure><p>2.查询表结构</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">desc</span> 表名;<br></code></pre></td></tr></table></figure><ol start="3"><li>查询指定表的建表结构</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> <span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> 表名;<br></code></pre></td></tr></table></figure><h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><p>1.添加字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> 表名 <span class="hljs-keyword">add</span> 字段名;<br></code></pre></td></tr></table></figure><p>2.修改字段</p><p>（1）修改数据类型</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> 表名 modify 字段名 新数据类型;<br></code></pre></td></tr></table></figure><p>（2）修改字段名和字段类型</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> 表名 change 旧字段名 新字段名 类型;<br></code></pre></td></tr></table></figure><p>3.修改表名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> 表名 rename <span class="hljs-keyword">to</span> 新表名;<br></code></pre></td></tr></table></figure><h3 id="删除-1"><a href="#删除-1" class="headerlink" title="删除"></a>删除</h3><p>1.删除字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> 表名 <span class="hljs-keyword">drop</span> 字段名;<br></code></pre></td></tr></table></figure><p>2.删除表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">drop</span> <span class="hljs-keyword">table</span> 表名;<br></code></pre></td></tr></table></figure><p>3.删除并重新创建该表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">truncate</span> <span class="hljs-keyword">table</span> 表名;<br></code></pre></td></tr></table></figure><h2 id="DML-增删改"><a href="#DML-增删改" class="headerlink" title="DML-增删改"></a>DML-增删改</h2><h3 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h3><p>1.给指定字段添加数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> 表名 (字段<span class="hljs-number">1</span>、字段<span class="hljs-number">2</span>，...) <span class="hljs-keyword">values</span> (值<span class="hljs-number">1</span>，值<span class="hljs-number">2</span>，...);<br></code></pre></td></tr></table></figure><p>2.给全部字段添加数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> 表名 <span class="hljs-keyword">values</span> (值<span class="hljs-number">1</span>，值<span class="hljs-number">2</span>，...);<br></code></pre></td></tr></table></figure><p>3.批量添加数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> 表名(字段<span class="hljs-number">1</span>、字段<span class="hljs-number">2</span>，...) <span class="hljs-keyword">values</span> (值<span class="hljs-number">1</span>，值<span class="hljs-number">2</span>，...),(值<span class="hljs-number">1</span>，值<span class="hljs-number">2</span>，...),...;<br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> 表名 <span class="hljs-keyword">values</span> (值<span class="hljs-number">1</span>，值<span class="hljs-number">2</span>，...);<br></code></pre></td></tr></table></figure><h3 id="更改数据"><a href="#更改数据" class="headerlink" title="更改数据"></a>更改数据</h3><p>1.更新所有数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">update</span> 表名 <span class="hljs-keyword">set</span> 字段<span class="hljs-number">1</span><span class="hljs-operator">=</span>要更改成的值;<br></code></pre></td></tr></table></figure><p>2.更新部分数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">update</span> 表名 <span class="hljs-keyword">set</span> 字段<span class="hljs-number">1</span><span class="hljs-operator">=</span>要更改成的值 <span class="hljs-keyword">where</span> 字段<span class="hljs-number">2</span><span class="hljs-operator">=</span>某值;<br></code></pre></td></tr></table></figure><h3 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h3><p>1.删除所有数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> 表名;<br></code></pre></td></tr></table></figure><p>2.删除部分数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> 表名 <span class="hljs-keyword">where</span> 字段<span class="hljs-number">1</span><span class="hljs-operator">=</span>某值;<br></code></pre></td></tr></table></figure><p>##DQL-查询</p><h3 id="基础查询"><a href="#基础查询" class="headerlink" title="基础查询"></a>基础查询</h3><p>&#x3D;&#x3D;*表示所有字段&#x3D;&#x3D;</p><p>1.查询多个字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> 字段<span class="hljs-number">1</span>,字段<span class="hljs-number">2</span>,... <span class="hljs-keyword">from</span> 表名;<br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> 表名;<br></code></pre></td></tr></table></figure><p>2.设置别名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> 字段<span class="hljs-number">1</span> <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;别名&#x27;</span> <span class="hljs-keyword">from</span> 表名;<br></code></pre></td></tr></table></figure><p>3.去除重复记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> 字段 <span class="hljs-keyword">from</span> 表名;<br></code></pre></td></tr></table></figure><h3 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> 字段列表 <span class="hljs-keyword">from</span> 表名 <span class="hljs-keyword">where</span> 条件;<br></code></pre></td></tr></table></figure><p>![](C:\Users\熊亦恺\Pictures\Screenshots\屏幕截图 2023-07-31 162347.png)</p><p>&#x3D;&#x3D;%表任意长度的任意字符序列。_表单个字符。&#x3D;&#x3D;</p><p>例如我们要查询一张表中名字不带李的其他人的信息：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> 表名 <span class="hljs-keyword">where</span> name <span class="hljs-keyword">not</span> <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%李%&#x27;</span>;<br></code></pre></td></tr></table></figure><h3 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h3><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>count</td><td>统计数量</td></tr><tr><td>max</td><td>最大值</td></tr><tr><td>min</td><td>最小值</td></tr><tr><td>avg</td><td>平均值</td></tr><tr><td>sum</td><td>求和</td></tr></tbody></table><p>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> 聚合函数(字段) <span class="hljs-keyword">from</span> 表名;<br></code></pre></td></tr></table></figure><p>例如以下例子表示：统计所有来自南昌的员工的年龄之和。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-built_in">sum</span>(age) <span class="hljs-keyword">from</span> employee <span class="hljs-keyword">where</span> home<span class="hljs-operator">=</span><span class="hljs-string">&#x27;南昌&#x27;</span>;<br></code></pre></td></tr></table></figure><p>&#x3D;&#x3D;注意：null不参与计算。&#x3D;&#x3D;</p><h3 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> 字段 <span class="hljs-keyword">from</span> 表名 <span class="hljs-keyword">where</span> 条件 <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> 分组字段名 <span class="hljs-keyword">having</span> 分组后的过滤条件;<br></code></pre></td></tr></table></figure><p>例如以下例子表示：查询年龄小于45的员工，并根据工作地址分组，获取员工数量大于等于3的工作地址。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> workplace,<span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">from</span> employee <span class="hljs-keyword">where</span> age<span class="hljs-operator">&lt;</span><span class="hljs-number">45</span> <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> workplace <span class="hljs-keyword">having</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>)<span class="hljs-operator">&gt;=</span><span class="hljs-number">3</span>;<br></code></pre></td></tr></table></figure><p>where与having的区别：</p><p>1.where在分组前过滤，having在分组后过滤</p><p>2.where不能对聚合函数进行判断，having可以</p><p><strong>执行顺序：where&gt;聚合函数&gt;having</strong></p><h3 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> 字段 <span class="hljs-keyword">from</span> 表名 <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> 字段<span class="hljs-number">1</span> 排序方式，字段<span class="hljs-number">2</span> 排序方式;<br></code></pre></td></tr></table></figure><p>asc升序（默认）    desc（降序）</p><p>注意：如果是多字段排序，第一个字段相同时，才会继续根据第二个字段排序。</p><h3 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> 字段 <span class="hljs-keyword">from</span> 表名 limit 起始索引,查询记录数;<br></code></pre></td></tr></table></figure><p>注意：起始索引从0开始，起始索引&#x3D;（查询页码-1）*每页显示记录数。</p><p>例：查询第1页数据，每页10条数据、查询第2页数据，每页10条数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> 表名 limit <span class="hljs-number">0</span>,<span class="hljs-number">10</span>;<br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> 表名 limit <span class="hljs-number">10</span>,<span class="hljs-number">10</span>;<br></code></pre></td></tr></table></figure><h3 id="编写执行顺序"><a href="#编写执行顺序" class="headerlink" title="编写执行顺序"></a>编写执行顺序</h3><p>编写：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> 字段列表 <span class="hljs-keyword">from</span> 表名列表 <span class="hljs-keyword">where</span> 条件列表 <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> 分组字段列表 <span class="hljs-keyword">having</span> 分组后条件列表 <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> 排序字段列表 limit 分页参数;<br></code></pre></td></tr></table></figure><p>执行：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">from</span> 表名列表 <span class="hljs-keyword">where</span> 条件列表 <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> 分组字段列表 <span class="hljs-keyword">having</span> 分组后条件列表 <span class="hljs-keyword">select</span> 字段列表 <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> 排序字段列表 limit 分页参数;<br></code></pre></td></tr></table></figure><h2 id="DML-用户及权限"><a href="#DML-用户及权限" class="headerlink" title="DML-用户及权限"></a>DML-用户及权限</h2><p>###用户管理</p><p>1.查询用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql">use mysql;<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> <span class="hljs-keyword">user</span>;<br></code></pre></td></tr></table></figure><p>2.创建用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">user</span> <span class="hljs-string">&#x27;用户名&#x27;</span>@<span class="hljs-string">&#x27;主机名&#x27;</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;密码&#x27;</span>;<br></code></pre></td></tr></table></figure><p>3.修改用户密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">user</span> <span class="hljs-string">&#x27;用户名&#x27;</span>@<span class="hljs-string">&#x27;主机名&#x27;</span> identified <span class="hljs-keyword">with</span> mysql_native_password <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;新密码&#x27;</span>;<br></code></pre></td></tr></table></figure><p>4.删除用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">drop</span> <span class="hljs-keyword">user</span> <span class="hljs-string">&#x27;用户名&#x27;</span>@<span class="hljs-string">&#x27;主机名&#x27;</span>;<br></code></pre></td></tr></table></figure><h3 id="权限控制"><a href="#权限控制" class="headerlink" title="权限控制"></a>权限控制</h3><p>常见权限：</p><table><thead><tr><th>权限</th><th>意义</th></tr></thead><tbody><tr><td>all</td><td>所有权限</td></tr><tr><td>select</td><td>查询数据</td></tr><tr><td>insert</td><td>插入数据</td></tr><tr><td>update</td><td>修改数据</td></tr><tr><td>delete</td><td>删除数据</td></tr><tr><td>alter</td><td>修改表</td></tr><tr><td>drop</td><td>删除数据库、表、视图</td></tr><tr><td>create</td><td>创建数据库、表</td></tr></tbody></table><p>1.查询权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> grants <span class="hljs-keyword">for</span> <span class="hljs-string">&#x27;用户名&#x27;</span>@<span class="hljs-string">&#x27;主机名&#x27;</span>;<br></code></pre></td></tr></table></figure><p>2.授予权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">grant</span> 权限列表 <span class="hljs-keyword">on</span> 数据库名.表名 <span class="hljs-keyword">to</span> <span class="hljs-string">&#x27;用户名&#x27;</span>@<span class="hljs-string">&#x27;主机名&#x27;</span>;<br></code></pre></td></tr></table></figure><p>3.撤销权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">revoke</span> 权限列表 <span class="hljs-keyword">on</span> 数据库名.表名 <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;用户名&#x27;</span>@<span class="hljs-string">&#x27;主机名&#x27;</span>;<br></code></pre></td></tr></table></figure><p>&#x3D;&#x3D;注意：&#x3D;&#x3D;1.多个权限中用逗号分隔。2.数据库名和表名都可以用*表示，代表所有。</p><h1 id="基础-函数"><a href="#基础-函数" class="headerlink" title="基础-函数"></a>基础-函数</h1><h2 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h2><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>concat(s1,s2,…,sn)</td><td>将s1,s2…sn拼接起来</td></tr><tr><td>lower(str)</td><td>将str全转换为小写</td></tr><tr><td>upper(str)</td><td>将str全转换为大写</td></tr><tr><td>lpad(str,n,pad)</td><td>用pad填充str左边，达到n个长度</td></tr><tr><td>rpad(str,n,pad)</td><td>用pad填充str右边，达到n个长度</td></tr><tr><td>trim(str)</td><td>去掉字符串头尾的空格</td></tr><tr><td>substring(str,start,len)</td><td>返回str从start开始len个长度的字符串，索引从1开始</td></tr></tbody></table><h2 id="数值函数"><a href="#数值函数" class="headerlink" title="数值函数"></a>数值函数</h2><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>ceil(x)</td><td>对x向上取整</td></tr><tr><td>floor(x)</td><td>对x向下取整</td></tr><tr><td>mod(x,y)</td><td>返回x除以y取余</td></tr><tr><td>rand()</td><td>返回0~1的随机数</td></tr><tr><td>round(x,y)</td><td>求x四舍五入的值，保留y位小数</td></tr></tbody></table><h2 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h2><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>curdate()</td><td>返回当前日期</td></tr><tr><td>curtime()</td><td>返回当前时间</td></tr><tr><td>now()</td><td>返回当前日期和时间</td></tr><tr><td>year(date)</td><td>获取date的年</td></tr><tr><td>month(date)</td><td>获取date的月</td></tr><tr><td>day(date)</td><td>获取date的日</td></tr><tr><td>date_add(date,interval expr type)</td><td>返回date加上type类型的时间间隔expr后的时间</td></tr><tr><td>datediff(date1,date2)</td><td>返回date1和date2的时间间隔</td></tr></tbody></table><h2 id="流程函数"><a href="#流程函数" class="headerlink" title="流程函数"></a>流程函数</h2><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>if(value,t,f)</td><td>若value位true，返回t，否则返回f</td></tr><tr><td>ifnull(value1,value2)</td><td>若value不为空，返回value1，否则返回value2</td></tr><tr><td>case val1 then res1 when val2 then res2… elae res3 end</td><td>如果val1为真返回res1，val2为真返回res2，否则返回res3</td></tr><tr><td>case expr when val1 then res1 when val2 then res2… elae res3 end</td><td>如果expr为val1则返回res1，为val2则返回res2，否则返回res3</td></tr></tbody></table><h1 id="基础-约束"><a href="#基础-约束" class="headerlink" title="基础-约束"></a>基础-约束</h1><p>##概述及演示</p><table><thead><tr><th>约束</th><th>描述</th><th>关键字</th></tr></thead><tbody><tr><td>非空约束</td><td>数据不能为null</td><td>not null</td></tr><tr><td>唯一约束</td><td>数据唯一，不能重复</td><td>unique</td></tr><tr><td>主键约束</td><td>主键是一行数据的唯一表示，要非空且唯一</td><td>primary key</td></tr><tr><td>默认约束</td><td>若未指定该字段的值，采用默认值</td><td>default</td></tr><tr><td>检查约束</td><td>保证字段值满足一个条件</td><td>check</td></tr><tr><td>外键约束</td><td>让两张表的数据之间建立连接，保证数据的一致性以及完整性</td><td>foreign key</td></tr></tbody></table><p>例如我们要创建如下的一张表：</p><p>![](C:\Users\熊亦恺\Pictures\Screenshots\屏幕截图 2023-08-01 163025.png)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> <span class="hljs-keyword">user</span>(<br>    id <span class="hljs-type">int</span> <span class="hljs-keyword">primary</span> key auto_increment comment <span class="hljs-string">&#x27;主键&#x27;</span>,<br>    name <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">unique</span> comment <span class="hljs-string">&#x27;姓名&#x27;</span>,<br>    age <span class="hljs-type">int</span> <span class="hljs-keyword">check</span> (age<span class="hljs-operator">&gt;</span><span class="hljs-number">0</span><span class="hljs-operator">&amp;&amp;</span>age<span class="hljs-operator">&lt;=</span><span class="hljs-number">120</span>) comment <span class="hljs-string">&#x27;年龄&#x27;</span>,<br>    status <span class="hljs-type">char</span>(<span class="hljs-number">1</span>) <span class="hljs-keyword">default</span> <span class="hljs-string">&#x27;1&#x27;</span> comment <span class="hljs-string">&#x27;状态&#x27;</span>,<br>    gender <span class="hljs-type">char</span>(<span class="hljs-number">1</span>) comment <span class="hljs-string">&#x27;性别&#x27;</span><br>)comment <span class="hljs-string">&#x27;用户表&#x27;</span>;<br></code></pre></td></tr></table></figure><h2 id="外键约束"><a href="#外键约束" class="headerlink" title="外键约束"></a>外键约束</h2><p>概述：外键用来让两张表的数据之间建立连接，从而保证数据的一致性和完整性。</p><p>1.添加外键：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> 表名 <span class="hljs-keyword">add</span> <span class="hljs-keyword">constraint</span> 外键名称 <span class="hljs-keyword">foreign</span> key(要关联的字段) <span class="hljs-keyword">references</span> 主表(关联的字段);<br></code></pre></td></tr></table></figure><p>例如以下表示：把emp表的emp_id与boss表的boss_id添加外键，并取外键名称为guanlian</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> emp <span class="hljs-keyword">add</span> <span class="hljs-keyword">constraint</span> guanlian <span class="hljs-keyword">foreign</span> key (emp_id) <span class="hljs-keyword">references</span> boss (boss_id);<br></code></pre></td></tr></table></figure><p>2.删除外键</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> 表名 <span class="hljs-keyword">drop</span> <span class="hljs-keyword">foreign</span> key 外键名称;<br></code></pre></td></tr></table></figure><h2 id="数据更新、删除时的操作"><a href="#数据更新、删除时的操作" class="headerlink" title="数据更新、删除时的操作"></a>数据更新、删除时的操作</h2><table><thead><tr><th>行为</th><th>说明</th></tr></thead><tbody><tr><td>no action</td><td>在父表中更新删除数据时，如果存在外键，不允许操作数据</td></tr><tr><td>restrict</td><td>在父表中更新删除数据时，如果存在外键，不允许操作数据</td></tr><tr><td>cascade</td><td>在父表中更新删除数据时，如果存在外键，子表的数据同步改变</td></tr><tr><td>set null</td><td>在父表中删除数据时，如果存在外键，设置子表数据为null</td></tr><tr><td>set default</td><td>父表有变更时，子表外键列设置成一个默认值</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> 表名 <span class="hljs-keyword">add</span> <span class="hljs-keyword">constraint</span> 外键名称 <span class="hljs-keyword">foreign</span> key(要关联的字段) <span class="hljs-keyword">references</span> 主表(关联的字段) <span class="hljs-keyword">on</span> <span class="hljs-keyword">update</span> 行为 <span class="hljs-keyword">on</span> <span class="hljs-keyword">delete</span> 行为;<br></code></pre></td></tr></table></figure><h1 id="基础-多表查询"><a href="#基础-多表查询" class="headerlink" title="基础-多表查询"></a>基础-多表查询</h1><h2 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h2><p>内连接查询的是两张表交集的部分。</p><p>1.隐式内连接</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> 字段列表 <span class="hljs-keyword">from</span> 表一,表二 <span class="hljs-keyword">where</span> 条件;<br></code></pre></td></tr></table></figure><p>2.显式内连接</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> 字段列表 <span class="hljs-keyword">from</span> 表一 <span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> 表二 <span class="hljs-keyword">on</span> 连接条件;<br></code></pre></td></tr></table></figure><h2 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h2><p>1.左外连接</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> 字段列表 <span class="hljs-keyword">from</span> 表一 <span class="hljs-keyword">left</span> <span class="hljs-keyword">outer</span> <span class="hljs-keyword">join</span> 表二 <span class="hljs-keyword">on</span> 条件;<br></code></pre></td></tr></table></figure><p>查询表一（左表）的所有数据和表一表二的交集部分数据。</p><p>2.右外连接</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> 字段列表 <span class="hljs-keyword">from</span> 表一 <span class="hljs-keyword">right</span> <span class="hljs-keyword">outer</span> <span class="hljs-keyword">join</span> 表二 <span class="hljs-keyword">on</span> 条件;<br></code></pre></td></tr></table></figure><p>查询表一（右表）的所有数据和表一表二的交集部分数据。</p><p>内连接无法查询为null的数据，外连接可以。</p><h2 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> 字段列表 <span class="hljs-keyword">from</span> 表一 别名一 <span class="hljs-keyword">join</span> 表一 别名二 <span class="hljs-keyword">on</span> 条件;<br></code></pre></td></tr></table></figure><p>自连接查询，可以是内连接查询，也可以是外连接查询。</p><h2 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h2><p>将多次查询的结果合并起来，形成一个新的查询结果集。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> 字段列表 <span class="hljs-keyword">from</span> 表一 [条件]<br><span class="hljs-keyword">union</span> [<span class="hljs-keyword">all</span>]<br><span class="hljs-keyword">select</span> 字段列表 <span class="hljs-keyword">from</span> 表二 [条件];<br></code></pre></td></tr></table></figure><p>注意：union  all表示直接合并，union表示去重合并；联合查询的列数及字段类型必须保持一致。</p><h2 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h2><p>也可成为嵌套查询。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> 表名 字段一 <span class="hljs-operator">=</span> (<span class="hljs-keyword">select</span> 字段<span class="hljs-number">2</span> <span class="hljs-keyword">from</span> 表名 [条件]);<br></code></pre></td></tr></table></figure><p>外部语句可以是insert&#x2F;update&#x2F;delete&#x2F;select。</p><h3 id="标量子查询"><a href="#标量子查询" class="headerlink" title="标量子查询"></a>标量子查询</h3><p>查询返回的结果是单个值。</p><h3 id="列子查询"><a href="#列子查询" class="headerlink" title="列子查询"></a>列子查询</h3><p> 返回的结果是一列多行。</p><table><thead><tr><th>操作符</th><th>描述</th></tr></thead><tbody><tr><td>in</td><td>在指定范围之内，多选一</td></tr><tr><td>not in</td><td>不在指定范围集合内</td></tr><tr><td>any</td><td>子查询返回列表中，有任意一个满足即可</td></tr><tr><td>some</td><td>与any等同，使用some的地方都可以使用any</td></tr><tr><td>all</td><td>子查询返回的所有值都必须满足</td></tr></tbody></table><p>例如要：查询所有员工中比财务部所有人工资都高的员工信息。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> salary <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> salary <span class="hljs-operator">&gt;</span><span class="hljs-keyword">all</span> (<span class="hljs-keyword">select</span> salary <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> <span class="hljs-operator">&gt;</span>dept_id <span class="hljs-operator">=</span>(<span class="hljs-keyword">select</span> id <span class="hljs-keyword">from</span> dept <span class="hljs-keyword">where</span> name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;财务部&#x27;</span> )); <br></code></pre></td></tr></table></figure><h3 id="行子查询"><a href="#行子查询" class="headerlink" title="行子查询"></a>行子查询</h3><p>返回的结果是一行多列。</p><h3 id="表子查询"><a href="#表子查询" class="headerlink" title="表子查询"></a>表子查询</h3><p>返回的结果是多行多列。</p><h1 id="基础-事务"><a href="#基础-事务" class="headerlink" title="基础-事务"></a>基础-事务</h1><p>##基础</p><p>概述：把几个操作作为一个整体，要么所有操作同时成功，要么同时失败。</p><p>1.查看&#x2F;设置事务提交方式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> @<span class="hljs-variable">@autocommit</span>;<br><span class="hljs-keyword">set</span> @<span class="hljs-variable">@autocommit</span><span class="hljs-operator">=</span><span class="hljs-number">0</span>;<br></code></pre></td></tr></table></figure><p>0表示自动、1表示手动</p><p>默认是自动提交的，我们可以手动开启事务</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">start</span> transaction;<br></code></pre></td></tr></table></figure><p>2.提交事务</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">commit</span>;<br></code></pre></td></tr></table></figure><p>3.回滚事务</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">rollback</span>;<br></code></pre></td></tr></table></figure><h2 id="事务四大特性"><a href="#事务四大特性" class="headerlink" title="事务四大特性"></a>事务四大特性</h2><ul><li>原子性(Atomicity)：事务是不可分割的最小操作但愿，要么全部成功，要么全部失败</li><li>一致性(Consistency)：事务完成时，必须使所有数据都保持一致状态</li><li>隔离性(Isolation)：数据库系统提供的隔离机制，保证事务在不受外部并发操作影响的独立环境下运行</li><li>持久性(Durability)：事务一旦提交或回滚，它对数据库中的数据的改变就是永久的</li></ul><h2 id="并发事务问题"><a href="#并发事务问题" class="headerlink" title="并发事务问题"></a>并发事务问题</h2><table><thead><tr><th align="left">问题</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">脏读</td><td align="left">一个事务读到另一个事务还没提交的数据</td></tr><tr><td align="left">不可重复读</td><td align="left">一个事务先后读取同一条记录，但两次读取的数据不同</td></tr><tr><td align="left">幻读</td><td align="left">一个事务按照条件查询数据时，没有对应的数据行，但是再插入数据时，又发现这行数据已经存在</td></tr></tbody></table>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/04/12/hello-world/"/>
    <url>/2023/04/12/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
